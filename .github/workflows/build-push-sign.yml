name: Build Push Sign
on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      registry:
        required: true
        type: string
      environment:
        required: false
        type: string
        default: Homelab

env:
  IMAGE_PATH: ${{ inputs.registry }}/${{ inputs.image }}
jobs:
  build_push_sign:
    permissions:
      packages: write
      id-token: write
    name: build-push-sign
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v2

      - name: log in to ghcr
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.REPOSITORY_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_PATH }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: build and publish image
        id: build-and-publish
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64,linux/arm
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.IMAGE_PATH }}:${{ github.SHA }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - uses: sigstore/cosign-installer@main
        with:
          cosign-release: "v1.13.1"

      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          COSIGN_EXPERIMENTAL: 1
        run: cosign sign ${{ env.IMAGE_PATH }}@${{ steps.build-and-publish.outputs.digest }}

      - name: verify the signed Docker image
        if: github.event_name != 'pull_request'
        env:
          COSIGN_EXPERIMENTAL: 1
        run: cosign verify --output text ${{ env.IMAGE_PATH }}:${{ github.SHA }}
